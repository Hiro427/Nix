[
  {
    "bindings": {
      "/": "buffer_search::Deploy",
      "K": "editor::Hover",
      "alt-h": "vim::ResizePaneRight",
      "alt-j": "vim::ResizePaneDown",
      "alt-k": "vim::ResizePaneUp",
      "alt-l": "vim::ResizePaneLeft",
      "ctrl-f": "editor::Format",
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-j": "workspace::ActivatePaneDown",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-shift-h": "workspace::SwapPaneLeft",
      "ctrl-shift-j": "workspace::SwapPaneDown",
      "ctrl-shift-k": "workspace::SwapPaneUp",
      "ctrl-shift-l": "workspace::SwapPaneRight",
      "space a": "workspace::AddFolderToProject",
      "space b": "tab_switcher::ToggleAll",
      "space d": "diagnostics::Deploy",
      "space e": "project_panel::ToggleFocus",
      "space g": "git_panel::ToggleFocus",
      "space h": "workspace::NewFileSplitHorizontal",
      "space l": "workspace::ToggleLeftDock",
      "space o": "workspace::OpenFiles",
      "space q": "pane::CloseActiveItem",
      // "space space": [
      //   "task::Spawn",
      //   {
      //     "task_name": "File Finder",
      //     "reveal_target": "center"
      //   }
      // ],
      "space o p": [
        "task::Spawn",
        {
          "task_name": "Open Project",
          "reveal_target": "center"
        }
      ],
      "space f l": [
        "task::Spawn",
        {
          "task_name": "Find Text",
          "reveal_target": "center"
        }
      ],
      "space r": "editor::Rename",
      "space s": "outline::Toggle",
      "space space": "file_finder::Toggle",
      "space t": "terminal_panel::ToggleFocus",
      "space j": "pane::ActivateNextItem",
      "space k": "pane::ActivatePreviousItem",
      "space v": "workspace::NewFileSplitVertical",
      "space f r": "projects::OpenRecent",
      "space f s": "outline::Toggle",
      "space f d": "diagnostics::Deploy",
      "space f g": "pane::DeploySearch",
      "space f b": "tab_switcher::ToggleAll",
      "space g b": "git::CheckoutBranch",
      "g j": "editor::GoToDiagnostic",
      "g k": "editor::GoToPreviousDiagnostic",
      "'": "vim::ToggleMarksView"
    },
    "context": "(Editor && vim_mode == normal)"
  },
  {
    "bindings": {
      "space f b": "tab_switcher::ToggleAll"
    },
    "context": "(Editor || Terminal) && vim_mode == normal"
  },
  {
    "bindings": {
      "f": "project_panel::NewFile",
      "d": "project_panel::NewDirectory",
      "x": "project_panel::Cut",
      "p": "project_panel::Paste",
      "w": "project_panel::Delete",
      "Tab": "project_panel::ExpandSelectedEntry",
      "q": "project_panel::RemoveFromProject",
      "space e": "workspace::CloseActiveDock",
      "ctrl-l": "editor::ToggleFocus",
      "space g": "git_panel::ToggleFocus"
    },
    "context": "ProjectPanel && not_editing"
  },
  {
    "bindings": {
      "a": "git::StageFile",
      "u": "git::UnstageFile",
      "d": "git::RestoreFile",
      "c": "git::Commit",
      "x": "git::Uncommit",
      "shift-a": "git::StageAll",
      "shift-u": "git::UnstageAll",
      "shift-p": "git::Push",
      "shift-c": "git::ExpandCommitEditor",
      "shift-d": "git::RestoreFile",
      "space g": "git_panel::Close",
      "space e": "project_panel::ToggleFocus"
    },
    "context": "GitPanel"
  },
  {
    "bindings": {
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp"
    },
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu"
  },
  {
    "bindings": {
      "ctrl-t": "workspace::ToggleBottomDock",
      "ctrl-n": [
        "workspace::SendKeystrokes",
        "down"
      ],
      "ctrl-p": [
        "workspace::SendKeystrokes",
        "up"
      ]
    },
    "context": "Terminal"
  },
  {
    "bindings": {
      "shift-tab": "editor::Tab",
      "tab": "editor::MoveRight"
    },
    "context": "Editor && vim_mode == insert"
  },
  {
    "context": "(FileFinder || FileFinder > Picker  > Editor)",
    "bindings": {
      "ctrl-s": "file_finder::ToggleSplitMenu"
    }
  },
  {
    "context": "Pane",
    "bindings": {
      "ctrl-w": [
        "pane::CloseCleanItems",
        {
          "close_pinned": false
        }
      ]
    }
  }
]
